(require '[clj-http.client :as client])
(list-methods)
(get-ticket-actions)
reload
(get-ticket-actions)
(get-ticket-actions 60998)
(get-ticket-actions 60913)
(get-ticket 60913)
(reload)
(get-ticket 60913)
(get-method-help "system.getAPIVersion")
(get-ticket 60913)
(get-ticket example-ticket)
((get-ticket example-ticket) :attributes)
(((get-ticket example-ticket) :attributes) "keywords")
(reload)
(use 'tracula.core)
(((get-ticket example-ticket) :attributes) "keywords")
reload
(requre 'tracula.core)
(require 'tracula.core)
(require '[tracula.core])
(((get-ticket example-ticket) :attributes) "keywords")
(load '[tracula.core])
(load '[tracula.core] :reload)
(require '[tracula.core] :reload)
(((get-ticket example-ticket) :attributes) "keywords")
(((get-ticket example-ticket) :attributes) "component")
(((get-ticket example-ticket) :attributes) "milestone")
(((get-ticket example-ticket) :attributes) "milestonex")
(((get-ticket example-ticket) :attributes) "type")
(((get-ticket example-ticket) :attributes) "_ts")
(def example-ticket 60989)
(((get-ticket example-ticket) :attributes) "_ts")
((get-ticket example-ticket) :attributes)
(date-time 1986 10 14 4 3 27 456)
(use 'clj-time.core)
(date-time 1986 10 14 4 3 27 456)
(str (date-time 1986 10 14 4 3 27 456))
(get-ticket example-ticket)
(str (date-time (now)))
(str (now))
(require '[tracula.core] :reload)
(str (now))
dt-format
(dt-format)
(require '[tracula.core] :reload)
(dt-format)
dt-format
(def custom-formatter (formatter dt-format))
(def custom-formatter (clj-time/formatter dt-format))
(def custom-formatter (clj-time.core/formatter dt-format))
cltime
(require '[tracula.core] :reload)
cltime
(def custom-formatter (cltime/formatter dt-format))
(now)
(cltime/now)
(str (cltime/now))
(def custom-formatter (tformat/formatter dt-format))
(require '[tracula.core] :reload)
(def custom-formatter (tformat/formatter dt-format))
(require '[tracula.core] :reload)
(def custom-formatter (tformat/formatter date-format))
(tformat/show-formatters)
(tformat/formatters :date-hour-minute-second)
(parse (tformat/formatters :date-hour-minute-second) now)
(tformat/parse (tformat/formatters :date-hour-minute-second) (now))
(tformat/parse (tformat/formatters :date-hour-minute-second) (cltime/now))
(tformat/formatters :date-hour-minute-second) (cltime/now)
(def foomat (tformat/formatters :date-hour-minute-second))
(foomat (cltime/now))
(unparse foomat (cltime/now))
(cltime/unparse foomat (cltime/now))
(tformat/unparse foomat (cltime/now))
get-current-timestamp-str
(require '[tracula.core] :reload)
get-current-timestamp-str
(get-current-timestamp-str)
(get-ticket-actions example-ticket)
(get-ticket example-ticket)
(get-ticket-actions example-ticket)
(require '[tracula.core] :reload)
(get-ticket-changelog example-ticket)
(require '[tracula.core] :reload)
(get-ticket-changelog example-ticket)
(require '[tracula.core] :reload)
(get-ticket-changelog example-ticket)
